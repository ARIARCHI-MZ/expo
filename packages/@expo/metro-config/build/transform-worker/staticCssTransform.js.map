{"version":3,"file":"staticCssTransform.js","names":["_metroTransformWorker","data","_interopRequireDefault","require","_css","_cssModules","_preprocessors","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","countLines","staticCssTransform","config","projectRoot","filename","options","_jsModuleResults$outp2","code","cssPreprocessors","matchCssModule","_jsModuleResults$outp","results","transformCssModuleWeb","src","dev","minify","sourceMap","jsModuleResults","worker","transform","Buffer","from","output","cssCode","css","toString","type","lineCount","map","functionMap","dependencies","Promise","resolve","then","cssResults","cssModules","wrapDevelopmentCSS"],"sources":["../../src/transform-worker/staticCssTransform.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FBSourceFunctionMap } from 'metro-source-map';\nimport worker, {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from 'metro-transform-worker';\n\nimport { wrapDevelopmentCSS } from './css';\nimport { matchCssModule, transformCssModuleWeb } from './css-modules';\nimport { cssPreprocessors } from './preprocessors';\n\nconst countLines = require('metro/src/lib/countLines') as (string: string) => number;\n\ntype JSFileType = 'js/script' | 'js/module' | 'js/module/asset';\n\ntype JsOutput = {\n  data: {\n    code: string;\n    lineCount: number;\n    map: any[];\n    functionMap: FBSourceFunctionMap | null;\n  };\n  type: JSFileType;\n};\n\n/**\n * The staticCssTransform will convert a CSS to static style objects.\n */\nexport async function staticCssTransform(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const code = await cssPreprocessors(projectRoot, filename, data);\n\n  // If the file is a CSS Module, then transform it to a JS module\n  // in development and a static CSS file in production.\n  if (matchCssModule(filename)) {\n    const results = await transformCssModuleWeb({\n      filename,\n      src: code,\n      options: {\n        projectRoot,\n        dev: options.dev,\n        minify: options.minify,\n        sourceMap: false,\n      },\n    });\n\n    const jsModuleResults = await worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(results.output),\n      options\n    );\n\n    const cssCode = results.css.toString();\n    const output: JsOutput[] = [\n      {\n        type: 'js/module',\n        data: {\n          // @ts-expect-error\n          ...jsModuleResults.output[0]?.data,\n\n          // Append additional css metadata for static extraction.\n          css: {\n            code: cssCode,\n            lineCount: countLines(cssCode),\n            map: [],\n            functionMap: null,\n          },\n        },\n      },\n    ];\n\n    return {\n      dependencies: jsModuleResults.dependencies,\n      output,\n    };\n  }\n\n  // Global CSS:\n\n  const { transform } = await import('lightningcss');\n\n  // TODO: Add bundling to resolve imports\n  // https://lightningcss.dev/bundling.html#bundling-order\n\n  const cssResults = transform({\n    filename,\n    code: Buffer.from(code),\n    sourceMap: false,\n    cssModules: false,\n    projectRoot,\n    minify: options.minify,\n  });\n\n  // TODO: Warnings:\n  // cssResults.warnings.forEach((warning) => {\n  // });\n\n  // Create a mock JS module that exports an empty object,\n  // this ensures Metro dependency graph is correct.\n  const jsModuleResults = await worker.transform(\n    config,\n    projectRoot,\n    filename,\n    options.dev ? Buffer.from(wrapDevelopmentCSS({ src: code, filename })) : Buffer.from(''),\n    options\n  );\n\n  const cssCode = cssResults.code.toString();\n\n  // In production, we export the CSS as a string and use a special type to prevent\n  // it from being included in the JS bundle. We'll extract the CSS like an asset later\n  // and append it to the HTML bundle.\n  const output: JsOutput[] = [\n    {\n      type: 'js/module',\n      data: {\n        // @ts-expect-error\n        ...jsModuleResults.output[0]?.data,\n\n        // Append additional css metadata for static extraction.\n        css: {\n          code: cssCode,\n          lineCount: countLines(cssCode),\n          map: [],\n          functionMap: null,\n        },\n      },\n    },\n  ];\n\n  return {\n    dependencies: jsModuleResults.dependencies,\n    output,\n  };\n}\n"],"mappings":"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"}