{"version":3,"file":"transform-worker.js","names":["_metroTransformWorker","data","_interopRequireDefault","require","_cssModules","_cssInteropTransform","_staticCssTransform","obj","__esModule","default","transform","config","projectRoot","filename","options","_config$externallyMan","isCss","type","test","worker","externallyManagedCss","_config$externallyMan2","Buffer","from","cssInterop","platform","staticCssTransform","cssInteropTransform","code","matchCssModule","module","exports"],"sources":["../../src/transform-worker/transform-worker.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport worker, {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from 'metro-transform-worker';\n\nimport { matchCssModule } from './css-modules';\nimport { cssInteropTransform } from './cssInteropTransform';\nimport { staticCssTransform } from './staticCssTransform';\n\nexport type ExpoJsTransformerConfig = {\n  externallyManagedCss?: Record<string, string>;\n  cssInterop?: boolean;\n};\n\nexport async function transform(\n  config: JsTransformerConfig & ExpoJsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const isCss = options.type !== 'asset' && /\\.(s?css|sass)$/.test(filename);\n  // If the file is not CSS, then use the default behavior.\n  if (!isCss) {\n    return worker.transform(config, projectRoot, filename, data, options);\n  }\n\n  if (config.externallyManagedCss?.[filename]) {\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(`module.exports = require(\"${config.externallyManagedCss?.[filename]}\")`),\n      options\n    );\n  }\n\n  if (config.cssInterop) {\n    if (options.platform === 'web') {\n      return staticCssTransform(config, projectRoot, filename, data, options);\n    } else {\n      return cssInteropTransform(config, projectRoot, filename, data, options);\n    }\n  }\n\n  // If the platform is not web, then return an empty module.\n  if (options.platform !== 'web') {\n    const code = matchCssModule(filename) ? 'module.exports={};' : '';\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      // TODO: Native CSS Modules\n      Buffer.from(code),\n      options\n    );\n  }\n\n  return staticCssTransform(config, projectRoot, filename, data, options);\n}\n\n/**\n * A custom Metro transformer that adds support for processing Expo-specific bundler features.\n * - Global CSS files on web.\n * - CSS Modules on web.\n * - TODO: Tailwind CSS on web.\n */\nmodule.exports = {\n  // Use defaults for everything that's not custom.\n  ...worker,\n  transform,\n};\n"],"mappings":";;;;;;AAOA,SAAAA,sBAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,qBAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAMA,SAAAG,YAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,WAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,qBAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,oBAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,oBAAA;EAAA,MAAAL,IAAA,GAAAE,OAAA;EAAAG,mBAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA0D,SAAAC,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAf1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBO,eAAeG,SAASA,CAC7BC,MAAqD,EACrDC,WAAmB,EACnBC,QAAgB,EAChBZ,IAAY,EACZa,OAA2B,EACC;EAAA,IAAAC,qBAAA;EAC5B,MAAMC,KAAK,GAAGF,OAAO,CAACG,IAAI,KAAK,OAAO,IAAI,iBAAiB,CAACC,IAAI,CAACL,QAAQ,CAAC;EAC1E;EACA,IAAI,CAACG,KAAK,EAAE;IACV,OAAOG,+BAAM,CAACT,SAAS,CAACC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEZ,IAAI,EAAEa,OAAO,CAAC;EACvE;EAEA,KAAAC,qBAAA,GAAIJ,MAAM,CAACS,oBAAoB,cAAAL,qBAAA,eAA3BA,qBAAA,CAA8BF,QAAQ,CAAC,EAAE;IAAA,IAAAQ,sBAAA;IAC3C,OAAOF,+BAAM,CAACT,SAAS,CACrBC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRS,MAAM,CAACC,IAAI,CAAE,6BAA0B,CAAAF,sBAAA,GAAEV,MAAM,CAACS,oBAAoB,cAAAC,sBAAA,uBAA3BA,sBAAA,CAA8BR,QAAQ,CAAE,IAAG,CAAC,EACrFC,OAAO,CACR;EACH;EAEA,IAAIH,MAAM,CAACa,UAAU,EAAE;IACrB,IAAIV,OAAO,CAACW,QAAQ,KAAK,KAAK,EAAE;MAC9B,OAAO,IAAAC,wCAAkB,EAACf,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEZ,IAAI,EAAEa,OAAO,CAAC;IACzE,CAAC,MAAM;MACL,OAAO,IAAAa,0CAAmB,EAAChB,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEZ,IAAI,EAAEa,OAAO,CAAC;IAC1E;EACF;;EAEA;EACA,IAAIA,OAAO,CAACW,QAAQ,KAAK,KAAK,EAAE;IAC9B,MAAMG,IAAI,GAAG,IAAAC,4BAAc,EAAChB,QAAQ,CAAC,GAAG,oBAAoB,GAAG,EAAE;IACjE,OAAOM,+BAAM,CAACT,SAAS,CACrBC,MAAM,EACNC,WAAW,EACXC,QAAQ;IACR;IACAS,MAAM,CAACC,IAAI,CAACK,IAAI,CAAC,EACjBd,OAAO,CACR;EACH;EAEA,OAAO,IAAAY,wCAAkB,EAACf,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEZ,IAAI,EAAEa,OAAO,CAAC;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAgB,MAAM,CAACC,OAAO,GAAG;EACf;EACA,GAAGZ,+BAAM;EACTT;AACF,CAAC"}