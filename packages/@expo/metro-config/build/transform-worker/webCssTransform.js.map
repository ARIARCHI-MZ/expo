{"version":3,"file":"webCssTransform.js","names":["_metroTransformWorker","data","_interopRequireDefault","require","_css","_cssModules","_postcss","_sass","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","countLines","webCssTransform","config","projectRoot","filename","options","_jsModuleResults$outp2","code","toString","transformPostCssModule","src","syntax","matchSass","compileSass","matchCssModule","_jsModuleResults$outp","results","transformCssModuleWeb","dev","minify","sourceMap","jsModuleResults","worker","transform","Buffer","from","output","cssCode","css","type","lineCount","map","functionMap","dependencies","Promise","resolve","then","cssResults","cssModules","wrapDevelopmentCSS"],"sources":["../../src/transform-worker/webCssTransform.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FBSourceFunctionMap } from 'metro-source-map';\nimport worker, {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from 'metro-transform-worker';\n\nimport { wrapDevelopmentCSS } from './css';\nimport { matchCssModule, transformCssModuleWeb } from './css-modules';\nimport { transformPostCssModule } from './postcss';\nimport { compileSass, matchSass } from './sass';\n// import { compileSass, matchSass } from \"./sass\";\n\nconst countLines = require('metro/src/lib/countLines') as (string: string) => number;\n\ntype JSFileType = 'js/script' | 'js/module' | 'js/module/asset';\n\ntype JsOutput = {\n  data: {\n    code: string;\n    lineCount: number;\n    map: any[];\n    functionMap: FBSourceFunctionMap | null;\n  };\n  type: JSFileType;\n};\n\nexport async function webCssTransform(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  let code = data.toString('utf8');\n\n  // Apply postcss transforms\n  code = await transformPostCssModule(projectRoot, {\n    src: code,\n    filename,\n  });\n\n  // TODO: When native has CSS support, this will need to move higher up.\n  const syntax = matchSass(filename);\n  if (syntax) {\n    code = compileSass(projectRoot, { filename, src: code }, { syntax }).src;\n  }\n\n  // If the file is a CSS Module, then transform it to a JS module\n  // in development and a static CSS file in production.\n  if (matchCssModule(filename)) {\n    const results = await transformCssModuleWeb({\n      filename,\n      src: code,\n      options: {\n        projectRoot,\n        dev: options.dev,\n        minify: options.minify,\n        sourceMap: false,\n      },\n    });\n\n    const jsModuleResults = await worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(results.output),\n      options\n    );\n\n    const cssCode = results.css.toString();\n    const output: JsOutput[] = [\n      {\n        type: 'js/module',\n        data: {\n          // @ts-expect-error\n          ...jsModuleResults.output[0]?.data,\n\n          // Append additional css metadata for static extraction.\n          css: {\n            code: cssCode,\n            lineCount: countLines(cssCode),\n            map: [],\n            functionMap: null,\n          },\n        },\n      },\n    ];\n\n    return {\n      dependencies: jsModuleResults.dependencies,\n      output,\n    };\n  }\n\n  // Global CSS:\n\n  const { transform } = await import('lightningcss');\n\n  // TODO: Add bundling to resolve imports\n  // https://lightningcss.dev/bundling.html#bundling-order\n\n  const cssResults = transform({\n    filename,\n    code: Buffer.from(code),\n    sourceMap: false,\n    cssModules: false,\n    projectRoot,\n    minify: options.minify,\n  });\n\n  // TODO: Warnings:\n  // cssResults.warnings.forEach((warning) => {\n  // });\n\n  // Create a mock JS module that exports an empty object,\n  // this ensures Metro dependency graph is correct.\n  const jsModuleResults = await worker.transform(\n    config,\n    projectRoot,\n    filename,\n    options.dev ? Buffer.from(wrapDevelopmentCSS({ src: code, filename })) : Buffer.from(''),\n    options\n  );\n\n  const cssCode = cssResults.code.toString();\n\n  // In production, we export the CSS as a string and use a special type to prevent\n  // it from being included in the JS bundle. We'll extract the CSS like an asset later\n  // and append it to the HTML bundle.\n  const output: JsOutput[] = [\n    {\n      type: 'js/module',\n      data: {\n        // @ts-expect-error\n        ...jsModuleResults.output[0]?.data,\n\n        // Append additional css metadata for static extraction.\n        css: {\n          code: cssCode,\n          lineCount: countLines(cssCode),\n          map: [],\n          functionMap: null,\n        },\n      },\n    },\n  ];\n\n  return {\n    dependencies: jsModuleResults.dependencies,\n    output,\n  };\n}\n"],"mappings":"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"}