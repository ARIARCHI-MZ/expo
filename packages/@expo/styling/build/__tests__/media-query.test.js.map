{"version":3,"file":"media-query.test.js","sourceRoot":"","sources":["../../src/__tests__/media-query.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { act, render } from '@testing-library/react-native';\nimport React from 'react';\n\nimport { colorScheme, isReduceMotionEnabled, vw } from '../runtime/native/globals';\nimport { StyleSheet } from '../runtime/native/stylesheet';\nimport { createMockComponent, registerCSS } from './utils';\n\nconst A = createMockComponent();\n\nbeforeEach(() => {\n  StyleSheet.__reset();\n});\n\ntest('color scheme', () => {\n  registerCSS(`\n.my-class { color: blue; }\n\n@media (prefers-color-scheme: dark) {\n  .my-class { color: red; }\n}`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n\n  act(() => {\n    colorScheme.set('dark');\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n});\n\ntest('prefers-reduced-motion', () => {\n  registerCSS(`\n    .my-class { color: blue; }\n\n    @media (prefers-reduced-motion) {\n      .my-class { color: red; }\n    }\n  `);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n\n  act(() => {\n    isReduceMotionEnabled.set(true);\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n});\n\ntest('width (plain)', () => {\n  registerCSS(`\n.my-class { color: blue; }\n\n@media (width: 500px) {\n  .my-class { color: red; }\n}`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n\n  act(() => {\n    vw.__set(500);\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n});\n\ntest('width (range)', () => {\n  registerCSS(`\n.my-class { color: blue; }\n\n@media (width = 500px) {\n  .my-class { color: red; }\n}`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n\n  act(() => {\n    vw.__set(500);\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n});\n\ntest('min-width', () => {\n  registerCSS(`\n.my-class { color: blue; }\n\n@media (min-width: 500px) {\n  .my-class { color: red; }\n}`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n\n  act(() => {\n    vw.__set(300);\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n});\n\ntest('max-width', () => {\n  registerCSS(`\n.my-class { color: blue; }\n\n@media (max-width: 500px) {\n  .my-class { color: red; }\n}`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    color: 'rgba(0, 0, 255, 1)',\n  });\n\n  act(() => {\n    vw.__set(300);\n  });\n\n  expect(A).styleToEqual({\n    color: 'rgba(255, 0, 0, 1)',\n  });\n});\n"]}