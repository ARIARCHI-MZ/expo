{"version":3,"file":"pseudo-classes.js","sourceRoot":"","sources":["../../src/__tests__/pseudo-classes.tsx"],"names":[],"mappings":"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","sourcesContent":["import { act, fireEvent, render, screen } from '@testing-library/react-native';\nimport React from 'react';\n\nimport { StyleSheet } from '../runtime/native/stylesheet';\nimport { createMockComponent, registerCSS } from './utils';\n\nconst A = createMockComponent();\n\nafterEach(() => {\n  StyleSheet.__reset();\n});\n\ntest('hover', () => {\n  registerCSS(`.my-class:hover { width: 10px; }`);\n\n  render(<A testID=\"a\" className=\"my-class\" />);\n\n  expect(A).styleToEqual({});\n\n  act(() => fireEvent(screen.getByTestId('a'), 'hoverIn', {}));\n\n  expect(A).styleToEqual({ width: 10 });\n\n  act(() => fireEvent(screen.getByTestId('a'), 'hoverOut', {}));\n\n  expect(A).styleToEqual({});\n});\n\ntest('active', () => {\n  registerCSS(`.my-class:active { width: 10px; }`);\n\n  render(<A testID=\"a\" className=\"my-class\" />);\n\n  expect(A).styleToEqual({});\n\n  act(() => fireEvent(screen.getByTestId('a'), 'PressIn', {}));\n\n  expect(A).styleToEqual({ width: 10 });\n\n  act(() => fireEvent(screen.getByTestId('a'), 'PressOut', {}));\n\n  expect(A).styleToEqual({});\n});\n\ntest('focus', () => {\n  registerCSS(`.my-class:focus { width: 10px; }`);\n\n  render(<A testID=\"a\" className=\"my-class\" />);\n\n  expect(A).styleToEqual({});\n\n  act(() => fireEvent(screen.getByTestId('a'), 'Focus', {}));\n\n  expect(A).styleToEqual({ width: 10 });\n\n  act(() => fireEvent(screen.getByTestId('a'), 'Blur', {}));\n\n  expect(A).styleToEqual({});\n});\n\ntest(':hover:active:focus', () => {\n  registerCSS(`.my-class:hover:active:focus { width: 10px; }`);\n\n  render(<A testID=\"a\" className=\"my-class\" />);\n\n  expect(A).styleToEqual({});\n\n  act(() => {\n    fireEvent(screen.getByTestId('a'), 'hoverIn', {});\n  });\n\n  expect(A).styleToEqual({});\n\n  act(() => {\n    fireEvent(screen.getByTestId('a'), 'PressIn', {});\n  });\n\n  expect(A).styleToEqual({});\n\n  act(() => {\n    fireEvent(screen.getByTestId('a'), 'focus', {});\n  });\n\n  expect(A).styleToEqual({ width: 10 });\n\n  act(() => fireEvent(screen.getByTestId('a'), 'hoverOut', {}));\n\n  expect(A).styleToEqual({});\n});\n"]}