{"version":3,"file":"transform.test.js","sourceRoot":"","sources":["../../src/__tests__/transform.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AACvD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAE3D,MAAM,CAAC,GAAG,mBAAmB,EAAE,CAAC;AAEhC,SAAS,CAAC,GAAG,EAAE;IACb,UAAU,CAAC,OAAO,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACjC,WAAW,CAAC,yDAAyD,CAAC,CAAC;IAEvE,MAAM,CAAC,oBAAC,CAAC,IAAC,SAAS,EAAC,UAAU,GAAG,CAAC,CAAC;IAEnC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QACrB,KAAK,EAAE,GAAG;QACV,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACjC,WAAW,CAAC,0DAA0D,CAAC,CAAC;IAExE,MAAM,CAAC,oBAAC,CAAC,IAAC,SAAS,EAAC,UAAU,GAAG,CAAC,CAAC;IAEnC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QACrB,MAAM,EAAE,GAAG;QACX,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;IACtB,WAAW,CAAC;;;;;GAKX,CAAC,CAAC;IAEH,MAAM,CAAC,oBAAC,CAAC,IAAC,SAAS,EAAC,YAAY,GAAG,CAAC,CAAC;IAErC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QACrB,SAAS,EAAE;YACT;gBACE,UAAU,EAAE,CAAC;aACd;YACD;gBACE,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,KAAK,EAAE,MAAM;aACd;YACD;gBACE,KAAK,EAAE,MAAM;aACd;YACD;gBACE,MAAM,EAAE,CAAC;aACV;YACD;gBACE,MAAM,EAAE,CAAC;aACV;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { render } from '@testing-library/react-native';\nimport React from 'react';\n\nimport { StyleSheet } from '../runtime/native/stylesheet';\nimport { createMockComponent, registerCSS } from './utils';\n\nconst A = createMockComponent();\n\nafterEach(() => {\n  StyleSheet.__reset();\n});\n\ntest('translateX percentage', () => {\n  registerCSS(`.my-class { width: 120px; transform: translateX(10%); }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    width: 120,\n    transform: [{ translateX: 12 }],\n  });\n});\n\ntest('translateY percentage', () => {\n  registerCSS(`.my-class { height: 120px; transform: translateY(10%); }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    height: 120,\n    transform: [{ translateY: 12 }],\n  });\n});\n\ntest('rotate-180', () => {\n  registerCSS(`\n    .rotate-180 {\n      --tw-rotate: 180deg;\n      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n    }\n  `);\n\n  render(<A className=\"rotate-180\" />);\n\n  expect(A).styleToEqual({\n    transform: [\n      {\n        translateX: 0,\n      },\n      {\n        rotate: '180deg',\n      },\n      {\n        skewX: '0deg',\n      },\n      {\n        skewY: '0deg',\n      },\n      {\n        scaleX: 1,\n      },\n      {\n        scaleY: 1,\n      },\n    ],\n  });\n});\n"]}