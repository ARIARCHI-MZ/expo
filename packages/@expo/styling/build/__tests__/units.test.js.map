{"version":3,"file":"units.test.js","sourceRoot":"","sources":["../../src/__tests__/units.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { act, render } from '@testing-library/react-native';\nimport React from 'react';\n\nimport { rem, vh, vw } from '../runtime/native/globals';\nimport { StyleSheet } from '../runtime/native/stylesheet';\nimport { createMockComponent, registerCSS } from './utils';\n\nconst A = createMockComponent();\n\nafterEach(() => {\n  StyleSheet.__reset();\n});\n\ntest('px', () => {\n  registerCSS(`.my-class { width: 10px; }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    width: 10,\n  });\n});\n\ntest('%', () => {\n  registerCSS(`.my-class { width: 10%; }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({\n    width: '10%',\n  });\n});\n\ntest('vw', () => {\n  registerCSS(`.my-class { width: 10vw; }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(vw.get()).toEqual(750);\n  expect(A).styleToEqual({\n    width: 75,\n  });\n\n  act(() => {\n    vw.__set(100);\n  });\n\n  expect(vw.get()).toEqual(100);\n  expect(A).styleToEqual({ width: 10 });\n});\n\ntest('vh', () => {\n  registerCSS(`.my-class { height: 10vh; }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(vh.get()).toEqual(1334);\n  expect(A).styleToEqual({ height: 133.4 });\n\n  act(() => {\n    vh.__set(100);\n  });\n\n  expect(vh.get()).toEqual(100);\n  expect(A).styleToEqual({ height: 10 });\n});\n\ntest('rem - default', () => {\n  registerCSS(`.my-class { fontSize: 10rem; }`);\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({ fontSize: 140 });\n});\n\ntest('rem - override', () => {\n  registerCSS(`.my-class { fontSize: 10rem; }`, {\n    inlineRem: 10,\n  });\n\n  render(<A className=\"my-class\" />);\n\n  expect(A).styleToEqual({ fontSize: 100 });\n});\n\ntest('rem - dynamic', () => {\n  registerCSS(`.my-class { fontSize: 10rem; }`, {\n    inlineRem: false,\n  });\n\n  render(<A className=\"my-class\" />);\n\n  expect(rem.get()).toEqual(14);\n  expect(A).styleToEqual({ fontSize: 140 });\n\n  act(() => {\n    rem.set(10);\n  });\n\n  expect(rem.get()).toEqual(10);\n  expect(A).styleToEqual({ fontSize: 100 });\n});\n"]}