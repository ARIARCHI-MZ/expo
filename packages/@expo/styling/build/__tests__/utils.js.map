{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/__tests__/utils.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAIe;AACf,+CAA+C;AAE/C,4CAGsB;AACtB,+DAAkE;AAClE,6DAA0D;AAE1D,SAAgB,WAAW,CACzB,GAAW,EACX,OAAwC;IAExC,uBAAU,CAAC,QAAQ,CAAC,IAAA,mCAAuB,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AAC1E,CAAC;AALD,kCAKC;AAID,SAAgB,mBAAmB,CACjC,YAAsC,mBAAI;IAI1C,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAC7B,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,8BAAC,SAAS,IAAC,GAAG,EAAE,GAAG,KAAM,KAAK,GAAI,CAAC,CAC5D,CAAC;IACF,MAAM,CAAC,GAAG,eAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAEtC,MAAM,gBAAgB,GAAG,eAAK,CAAC,UAAU,CACvC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACb,OAAO,IAAA,+BAAiB,EACtB,CAAC,aAAiC,EAAE,KAAa,EAAE,GAAW,EAAE,EAAE;YAChE,OAAO,8BAAC,aAAa,IAAC,GAAG,EAAE,GAAG,KAAM,KAAK,EAAE,GAAG,EAAE,GAAG,GAAI,CAAC;QAC1D,CAAC,EACD,CAAC,EACD,KAAK,EACL,KAAK,EACL,IAAI,CACL,CAAC;IACJ,CAAC,CACF,CAAC;IAEF,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE;QAC9B,SAAS;KACV,CAAC,CAAC;IAEH,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AA7BD,kDA6BC","sourcesContent":["import React, {\n  ComponentType,\n  ForwardRefExoticComponent,\n  RefAttributes,\n} from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport {\n  CssToReactNativeRuntimeOptions,\n  cssToReactNativeRuntime,\n} from \"../css-to-rn\";\nimport { defaultCSSInterop } from \"../runtime/native/css-interop\";\nimport { StyleSheet } from \"../runtime/native/stylesheet\";\n\nexport function registerCSS(\n  css: string,\n  options?: CssToReactNativeRuntimeOptions\n) {\n  StyleSheet.register(cssToReactNativeRuntime(Buffer.from(css), options));\n}\n\ntype MockComponentProps = ViewProps & { className?: string };\n\nexport function createMockComponent(\n  Component: React.ComponentType<any> = View\n): ForwardRefExoticComponent<\n  MockComponentProps & RefAttributes<MockComponentProps>\n> {\n  const component = Object.assign(\n    jest.fn((props, ref) => <Component ref={ref} {...props} />)\n  );\n  const b = React.forwardRef(component);\n\n  const componentWithRef = React.forwardRef<MockComponentProps>(\n    (props, ref) => {\n      return defaultCSSInterop(\n        (ComponentType: ComponentType<any>, props: object, key: string) => {\n          return <ComponentType ref={ref} {...props} key={key} />;\n        },\n        b,\n        props,\n        \"key\",\n        true\n      );\n    }\n  );\n\n  Object.assign(componentWithRef, {\n    component,\n  });\n\n  return componentWithRef;\n}\n"]}