{"version":3,"file":"animations.js","sourceRoot":"","sources":["../../../src/runtime/native/animations.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AnimationIterationCount, AnimationName, Time } from 'lightningcss';\nimport React, { ComponentType, useMemo, forwardRef, useState, useEffect } from 'react';\nimport {\n  AnimatableValue,\n  SharedValue,\n  useAnimatedStyle,\n  useSharedValue,\n  withRepeat,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport {\n  AnimatableCSSProperty,\n  ContainerRuntime,\n  ExtractedAnimation,\n  Interaction,\n  InteropMeta,\n  Style,\n} from '../../types';\nimport { createAnimatedComponent } from './animated-component';\nimport { flattenStyle } from './flatten-style';\nimport { animationMap, styleMetaMap } from './globals';\n\ntype AnimationInteropProps = Record<string, unknown> & {\n  __component: ComponentType<any>;\n  __interaction: Interaction;\n  __variables: Record<string, unknown>;\n  __containers: Record<string, ContainerRuntime>;\n  __interopMeta: InteropMeta;\n};\n\n/*\n * This component breaks the rules of hooks, however is it safe to do so as the animatedProps are static\n * If they do change, the key for this component will be regenerated forcing a remount (a reset of hooks)\n */\nexport const AnimationInterop = forwardRef(function Animated(\n  {\n    __component: Component,\n    __propEntries,\n    __interaction: interaction,\n    __variables,\n    __containers,\n    __interopMeta: interopMeta,\n    ...props\n  }: AnimationInteropProps,\n  ref: unknown\n) {\n  Component = createAnimatedComponent(Component);\n\n  const isLayoutReady = useIsLayoutReady(interopMeta, interaction);\n\n  for (const prop of new Set([...interopMeta.transitionProps, ...interopMeta.animatedProps])) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    props[prop] = useAnimationAndTransitions(\n      props[prop] as Record<string, AnimatableValue>,\n      __variables,\n      interaction,\n      isLayoutReady\n    );\n  }\n\n  return <Component ref={ref} {...props} />;\n});\n\n/**\n * Returns if the component layout is calculated. If layout is not required, this will always return true\n */\nfunction useIsLayoutReady(interopMeta: InteropMeta, interaction: Interaction) {\n  const [layoutReady, setLayoutReady] = useState(\n    interopMeta.requiresLayout ? interaction.layout.width.get() !== 0 : true\n  );\n\n  useEffect(() => {\n    if (layoutReady) {\n      return undefined;\n    }\n\n    // We only need to listen for a single layout change\n    const subscription = interaction.layout.width.subscribe(() => {\n      setLayoutReady(true);\n      subscription();\n    });\n    return () => subscription();\n  }, [layoutReady]);\n\n  return layoutReady;\n}\n\ntype TimingFrameProperties = {\n  duration: number;\n  progress: number;\n  value: AnimatableValue;\n};\n\nfunction useAnimationAndTransitions(\n  style: Record<string, AnimatableValue>,\n  variables: Record<string, unknown>,\n  interaction: Interaction,\n  isLayoutReady: boolean\n) {\n  const {\n    animations: {\n      name: animationNames = emptyArray,\n      duration: animationDurations = emptyArray,\n      iterationCount: animationIterationCounts = emptyArray,\n    } = {},\n    transition: {\n      property: transitions = emptyArray,\n      duration: transitionDurations = emptyArray,\n    } = {},\n  } = styleMetaMap.get(style) || {};\n\n  const [transitionProps, transitionValues] = useTransitions(\n    transitions,\n    transitionDurations,\n    style\n  );\n\n  const [animationProps, animationValues] = useAnimations(\n    animationNames,\n    animationDurations,\n    animationIterationCounts,\n    style,\n    variables,\n    interaction,\n    isLayoutReady\n  );\n\n  return useAnimatedStyle(() => {\n    const transformProps = new Set(Object.keys(defaultTransform));\n    const result: Record<string, unknown> = {\n      ...style,\n      // Reanimated crashes if the fontWeight is numeric\n      fontWeight: style.fontWeight?.toString(),\n      transform: style.transform ? [] : undefined,\n    };\n\n    function doAnimation(props: string[], values: SharedValue<AnimatableValue>[]) {\n      for (const [index, prop] of props.entries()) {\n        const value = values[index].value;\n\n        if (value !== undefined) {\n          if (transformProps.has(prop)) {\n            result.transform ??= [];\n            (result.transform as any[]).push({ [prop]: value });\n          } else {\n            result[prop] = value;\n          }\n        }\n      }\n    }\n    doAnimation(transitionProps, transitionValues);\n    doAnimation(animationProps, animationValues);\n    return result;\n  }, [...transitionValues, ...animationValues]);\n}\n\nfunction useTransitions(\n  transitions: AnimatableCSSProperty[],\n  transitionDurations: Time[],\n  style: Record<string, AnimatableValue>\n) {\n  const transitionProps: string[] = [];\n  const transitionValues: SharedValue<AnimatableValue>[] = [];\n\n  for (let index = 0; index < transitions.length; index++) {\n    const prop = transitions[index];\n    const value = style[prop] ?? defaultValues[prop];\n    const duration = timeToMS(\n      getValue(transitionDurations, index, {\n        type: 'seconds',\n        value: 0,\n      })\n    );\n\n    if (prop === 'transform') {\n      const valueObj = Object.assign({}, ...((value || []) as any[]));\n\n      for (const tProp of transformProps) {\n        const tValue = valueObj[tProp] ?? defaultTransform[tProp];\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const sharedValue = useSharedValue(tValue);\n        transitionProps.push(tProp);\n        transitionValues.push(sharedValue);\n        sharedValue.value = withTiming(tValue, { duration });\n      }\n    } else {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const sharedValue = useSharedValue(value);\n      transitionProps.push(prop);\n      transitionValues.push(sharedValue);\n      sharedValue.value = withTiming(value, { duration });\n    }\n  }\n\n  return [transitionProps, transitionValues] as const;\n}\n\nfunction useAnimations(\n  animationNames: AnimationName[],\n  animationDurations: Time[],\n  animationIterationCounts: AnimationIterationCount[],\n  style: Record<string, unknown>,\n  variables: Record<string, unknown>,\n  interaction: Interaction,\n  isLayoutReady: boolean\n) {\n  const animations = useMemo(() => {\n    const animations = new Map<string, TimingFrameProperties[]>();\n\n    for (let index = 0; index < animationNames.length; index++) {\n      const name = getValue(animationNames, index, { type: 'none' });\n      const totalDuration = timeToMS(\n        getValue(animationDurations, index, {\n          type: 'seconds',\n          value: 0,\n        })\n      );\n\n      let keyframes: ExtractedAnimation;\n      if (name.type === 'none') {\n        keyframes = defaultAnimation;\n      } else {\n        keyframes = animationMap.get(name.value) || defaultAnimation;\n      }\n\n      const propProgressValues: Record<string, Record<number, AnimatableValue>> = {};\n\n      for (const { style: $style, selector: progress } of keyframes.frames) {\n        const flatStyle = flattenStyle($style, {\n          variables,\n          interaction,\n          ch: typeof style.height === 'number' ? style.height : undefined,\n          cw: typeof style.width === 'number' ? style.width : undefined,\n        });\n\n        for (let [prop, value] of Object.entries(flatStyle)) {\n          if (prop === 'transform') {\n            if (value.length === 0) {\n              value = defaultTransformEntries;\n            }\n            for (const transformValue of value) {\n              const [[$prop, $value]] = Object.entries(transformValue);\n              propProgressValues[$prop] ??= {};\n              propProgressValues[$prop][progress] = $value as AnimatableValue;\n            }\n          } else {\n            propProgressValues[prop] ??= {};\n            propProgressValues[prop][progress] = value as AnimatableValue;\n          }\n        }\n      }\n\n      for (const [prop, progressValues] of Object.entries(propProgressValues)) {\n        const orderedProgress = Object.keys(progressValues)\n          .map((v) => parseFloat(v))\n          .sort((a, b) => a - b);\n\n        const frames: TimingFrameProperties[] = [];\n\n        if (orderedProgress[0] !== 0) {\n          frames.push({\n            progress: 0,\n            duration: 0,\n            value: PLACEHOLDER,\n          });\n        }\n\n        for (let i = 0; i < orderedProgress.length; i++) {\n          const progress = orderedProgress[i];\n          const value = progressValues[progress];\n          const previousProgress = progress === 0 || i === 0 ? 0 : orderedProgress[i - 1];\n\n          frames.push({\n            duration: totalDuration * (progress - previousProgress),\n            progress,\n            value,\n          });\n        }\n\n        animations.set(prop, frames);\n      }\n    }\n\n    return animations;\n  }, [animationNames, isLayoutReady]);\n\n  /*\n   * Create a shared value for each animation property with a default value\n   */\n  const animationProps: string[] = [];\n  const animationValues: SharedValue<AnimatableValue>[] = [];\n  for (const [prop, [first]] of animations.entries()) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    animationValues.push(useSharedValue(getInitialValue(prop, first, style)));\n    animationProps.push(prop);\n  }\n\n  /*\n   * If the frames ever change, reset the animation\n   * This also prevents the animation from resetting when other state changes\n   */\n  useMemo(() => {\n    const entries = Array.from(animations.entries());\n    for (const [index, [prop, [first, ...rest]]] of entries.entries()) {\n      const sharedValue = animationValues[index];\n      const iterations = getIterations(animationIterationCounts, index);\n\n      // Reset the value to the first frame\n      sharedValue.value = getInitialValue(prop, first, style);\n\n      // Create timing animations for the rest of the frames\n      const timing = rest.map(({ duration, value }) => {\n        return withTiming(value, { duration });\n      }) as [AnimatableValue, ...AnimatableValue[]];\n\n      sharedValue.value = withRepeat(withSequence(...timing), iterations);\n    }\n  }, [animations, animationIterationCounts]);\n\n  return [animationProps, animationValues] as const;\n}\n\nfunction getInitialValue(\n  prop: string,\n  frame: TimingFrameProperties,\n  style: Style\n): AnimatableValue {\n  if (frame.value === PLACEHOLDER) {\n    if (transformProps.has(prop)) {\n      const initialTransform = style.transform?.find((t) => {\n        return t[prop as keyof typeof t] !== undefined;\n      });\n\n      return initialTransform\n        ? initialTransform[prop as keyof typeof initialTransform]\n        : defaultTransform[prop];\n    } else {\n      return style[prop as keyof Style] as AnimatableValue;\n    }\n  } else {\n    return frame.value;\n  }\n}\n\nfunction getValue<T>(array: T[] | undefined, index: number, defaultValue: T) {\n  return array && array.length > 0 ? array[index % array.length] : defaultValue;\n}\n\nconst PLACEHOLDER = {} as AnimatableValue;\nconst emptyArray: any[] = [];\nconst defaultAnimation: ExtractedAnimation = { frames: [] };\nconst timeToMS = (time: Time) => {\n  return time.type === 'milliseconds' ? time.value : time.value * 1000;\n};\nconst getIterations = (iterations: AnimationIterationCount[], index: number) => {\n  const iteration = getValue(iterations, index, { type: 'infinite' });\n  return iteration.type === 'infinite' ? Infinity : iteration.value;\n};\n\nexport const defaultValues: {\n  [K in AnimatableCSSProperty]?: Style[K];\n} = {\n  backgroundColor: 'transparent',\n  borderBottomColor: 'transparent',\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  borderBottomWidth: 0,\n  borderColor: 'transparent',\n  borderLeftColor: 'transparent',\n  borderLeftWidth: 0,\n  borderRadius: 0,\n  borderRightColor: 'transparent',\n  borderRightWidth: 0,\n  borderTopColor: 'transparent',\n  borderTopWidth: 0,\n  borderWidth: 0,\n  bottom: 0,\n  color: 'transparent',\n  flex: 1,\n  flexBasis: 1,\n  flexGrow: 1,\n  flexShrink: 1,\n  fontSize: 14,\n  fontWeight: '400',\n  gap: 0,\n  left: 0,\n  lineHeight: 14,\n  margin: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  marginRight: 0,\n  marginTop: 0,\n  maxHeight: 0,\n  maxWidth: 0,\n  minHeight: 0,\n  minWidth: 0,\n  opacity: 1,\n  padding: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  paddingRight: 0,\n  paddingTop: 0,\n  right: 0,\n  top: 0,\n  zIndex: 0,\n};\nexport const defaultTransform: Record<string, AnimatableValue> = {\n  perspective: 1,\n  translateX: 0,\n  translateY: 0,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg',\n  rotateX: '0deg',\n  rotateY: '0deg',\n  rotateZ: '0deg',\n  skewX: '0deg',\n  skewY: '0deg',\n  scale: 1,\n};\nexport const transformProps = new Set(Object.keys(defaultTransform));\nexport const defaultTransformEntries = Object.entries(defaultTransform).map(([key, value]) => ({\n  [key]: value,\n}));\n"]}