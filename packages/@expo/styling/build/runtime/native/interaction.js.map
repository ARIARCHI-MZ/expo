{"version":3,"file":"interaction.js","sourceRoot":"","sources":["../../../src/runtime/native/interaction.ts"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  TargetedEvent,\n} from \"react-native\";\n\nimport { Interaction, InteropMeta } from \"../../types\";\nimport { createSignal } from \"./signals\";\n\nexport function useInteractionSignals(): Interaction {\n  return React.useMemo(\n    () => ({\n      active: createSignal(false),\n      hover: createSignal(false),\n      focus: createSignal(false),\n      layout: {\n        width: createSignal<number>(0),\n        height: createSignal<number>(0),\n      },\n    }),\n    []\n  );\n}\n\nexport function useInteractionHandlers(\n  props: Record<string, any>,\n  signals: Interaction,\n  meta: InteropMeta\n) {\n  const propsRef = React.useRef(props);\n  propsRef.current = props;\n\n  /**\n   * Does setting a handler for each interaction cause any performance issues?\n   * Would it be better to check the conditions on each style and selectively add them?\n   *\n   * onLayout is only used when there is a containerName, we can easily make that optional\n   */\n  const memoHandlers = React.useMemo(\n    () => ({\n      // You need onPress for onPressIn and onPressOut to work?\n      onPress(event: GestureResponderEvent) {\n        propsRef.current.onPress?.(event);\n      },\n      onPressIn(event: GestureResponderEvent) {\n        propsRef.current.onPressIn?.(event);\n        signals.active.set(true);\n      },\n      onPressOut(event: GestureResponderEvent) {\n        propsRef.current.onPressOut?.(event);\n        signals.active.set(false);\n      },\n      onHoverIn(event: MouseEvent) {\n        propsRef.current.onHoverIn?.(event);\n        signals.hover.set(true);\n      },\n      onHoverOut(event: MouseEvent) {\n        propsRef.current.onHoverIn?.(event);\n        signals.hover.set(false);\n      },\n      onFocus(event: NativeSyntheticEvent<TargetedEvent>) {\n        propsRef.current.onFocus?.(event);\n        signals.focus.set(true);\n      },\n      onBlur(event: NativeSyntheticEvent<TargetedEvent>) {\n        propsRef.current.onBlur?.(event);\n        signals.focus.set(false);\n      },\n      onLayout(event: LayoutChangeEvent) {\n        propsRef.current.onLayout?.(event);\n        signals.layout.width.set(event.nativeEvent.layout.width);\n        signals.layout.height.set(event.nativeEvent.layout.height);\n      },\n    }),\n    []\n  );\n\n  const handlers: Partial<typeof memoHandlers> = {};\n\n  if (meta.requiresLayout) handlers.onLayout = memoHandlers.onLayout;\n  if (meta.hasActive) {\n    handlers.onPress = memoHandlers.onPress;\n    handlers.onPressIn = memoHandlers.onPressIn;\n    handlers.onPressOut = memoHandlers.onPressOut;\n  }\n  if (meta.hasHover) {\n    handlers.onHoverIn = memoHandlers.onHoverIn;\n    handlers.onHoverOut = memoHandlers.onHoverOut;\n  }\n  if (meta.hasFocus) {\n    handlers.onFocus = memoHandlers.onFocus;\n    handlers.onBlur = memoHandlers.onBlur;\n  }\n\n  return handlers;\n}\n"]}