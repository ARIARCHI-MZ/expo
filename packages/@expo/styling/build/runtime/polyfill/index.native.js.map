{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../src/runtime/polyfill/index.native.ts"],"names":[],"mappings":";;;;;;AACA,+CAAqD;AACrD,sFAA+C;AAE/C,uDAA0D;AAGjD,kGAHA,+BAAiB,OAGA;AAF1B,uCAA6D;AAI7D,SAAgB,UAAU,CACxB,SAAwB,EACxB,UAA2B,+BAAiB;IAE5C,yBAAe,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC1C,CAAC;AALD,gCAKC;AAED,UAAU,CAAC,iCAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,UAAU,CAAC,iCAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,UAAU,CAAC,wBAAS,CAAC,CAAC;AACtB,UAAU,CAAC,mBAAI,CAAC,CAAC;AACjB,UAAU,CAAC,mBAAI,CAAC,CAAC;AAEjB;;;GAGG;AACH,SAAgB,aAAa,CAC3B,GAAa,EACb,IAAwB,EACxB,KAAU,EACV,GAAW,EACX,oBAA8B;IAE9B,SAAS,UAAU,CACjB,IAAmB,EACnB,EAAE,KAAK,EAAE,GAAG,MAAM,EAAuB,EACzC,GAAW;QAEX,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;YAC5B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACzB,OAAO,KAAK,CAAC,IAAI,CAAC;SACnB;QAED,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;YAC9B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC7B,OAAO,KAAK,CAAC,MAAM,CAAC;SACrB;QAED,OAAO,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,OAAO,IAAA,+BAAiB,EAAC,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;AAC/E,CAAC;AA1BD,sCA0BC","sourcesContent":["import { ComponentType } from \"react\";\nimport { View, Text, Pressable } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\n\nimport { defaultCSSInterop } from \"../native/css-interop\";\nimport { InteropFunction, polyfillMapping } from \"./mapping\";\n\nexport { defaultCSSInterop };\n\nexport function makeStyled(\n  component: ComponentType,\n  interop: InteropFunction = defaultCSSInterop\n) {\n  polyfillMapping.set(component, interop);\n}\n\nmakeStyled(Animated.Text);\nmakeStyled(Animated.View);\nmakeStyled(Pressable);\nmakeStyled(Text);\nmakeStyled(View);\n\n/**\n * The SvgCSSInterop utilises the defaultCSSInterop to transform the `style` prop.\n * Once transformed, the `fill` and `stroke` style attributes are removed and added to the `props` object\n */\nexport function svgCSSInterop(\n  jsx: Function,\n  type: ComponentType<any>,\n  props: any,\n  key: string,\n  experimentalFeatures?: boolean\n) {\n  function svgInterop(\n    type: ComponentType,\n    { style, ...$props }: Record<string, any>,\n    key: string\n  ) {\n    if (style.fill !== undefined) {\n      $props.fill = style.fill;\n      delete style.fill;\n    }\n\n    if (style.stroke !== undefined) {\n      $props.stroke = style.stroke;\n      delete style.stroke;\n    }\n\n    return jsx(type, { ...$props, style }, key);\n  }\n\n  return defaultCSSInterop(svgInterop, type, props, key, experimentalFeatures);\n}\n"]}