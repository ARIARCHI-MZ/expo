{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../src/runtime/polyfill/index.native.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACrD,OAAO,QAAQ,MAAM,yBAAyB,CAAC;AAE/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAmB,eAAe,EAAE,MAAM,WAAW,CAAC;AAE7D,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAE7B,MAAM,UAAU,UAAU,CAAC,SAAwB,EAAE,UAA2B,iBAAiB;IAC/F,eAAe,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC1C,CAAC;AAED,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,UAAU,CAAC,SAAS,CAAC,CAAC;AACtB,UAAU,CAAC,IAAI,CAAC,CAAC;AACjB,UAAU,CAAC,IAAI,CAAC,CAAC;AAEjB;;;GAGG;AACH,MAAM,UAAU,aAAa,CAC3B,GAAa,EACb,IAAwB,EACxB,KAAU,EACV,GAAW,EACX,oBAA8B;IAE9B,SAAS,UAAU,CAAC,IAAmB,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,EAAuB,EAAE,GAAW;QAC7F,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;YAC5B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACzB,OAAO,KAAK,CAAC,IAAI,CAAC;SACnB;QAED,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;YAC9B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC7B,OAAO,KAAK,CAAC,MAAM,CAAC;SACrB;QAED,OAAO,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,OAAO,iBAAiB,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;AAC/E,CAAC","sourcesContent":["import { ComponentType } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport { defaultCSSInterop } from '../native/css-interop';\nimport { InteropFunction, polyfillMapping } from './mapping';\n\nexport { defaultCSSInterop };\n\nexport function makeStyled(component: ComponentType, interop: InteropFunction = defaultCSSInterop) {\n  polyfillMapping.set(component, interop);\n}\n\nmakeStyled(Animated.Text);\nmakeStyled(Animated.View);\nmakeStyled(Pressable);\nmakeStyled(Text);\nmakeStyled(View);\n\n/**\n * The SvgCSSInterop utilises the defaultCSSInterop to transform the `style` prop.\n * Once transformed, the `fill` and `stroke` style attributes are removed and added to the `props` object\n */\nexport function svgCSSInterop(\n  jsx: Function,\n  type: ComponentType<any>,\n  props: any,\n  key: string,\n  experimentalFeatures?: boolean\n) {\n  function svgInterop(type: ComponentType, { style, ...$props }: Record<string, any>, key: string) {\n    if (style.fill !== undefined) {\n      $props.fill = style.fill;\n      delete style.fill;\n    }\n\n    if (style.stroke !== undefined) {\n      $props.stroke = style.stroke;\n      delete style.stroke;\n    }\n\n    return jsx(type, { ...$props, style }, key);\n  }\n\n  return defaultCSSInterop(svgInterop, type, props, key, experimentalFeatures);\n}\n"]}