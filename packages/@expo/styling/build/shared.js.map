{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":";;;AAEA,SAAgB,cAAc,CAAC,KAAc;IAC3C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC/B,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACpC,IAAK,KAAiC,CAAC,IAAI,KAAK,SAAS,EAAE;YACzD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D;KACF;SAAM;QACL,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAdD,wCAcC","sourcesContent":["import { RuntimeValue } from \"./types\";\n\nexport function isRuntimeValue(value: unknown): value is RuntimeValue {\n  if (!value) {\n    return false;\n  } else if (Array.isArray(value)) {\n    return value.some((v) => isRuntimeValue(v));\n  } else if (typeof value === \"object\") {\n    if ((value as Record<string, unknown>).type === \"runtime\") {\n      return true;\n    } else {\n      return Object.values(value).some((v) => isRuntimeValue(v));\n    }\n  } else {\n    return false;\n  }\n}\n"]}