{"version":3,"file":"css-modules.js","sourceRoot":"","sources":["../../src/transformer/css-modules.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAA2C;AAE3C,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAEtB,KAAK,UAAU,qBAAqB,CAAC,KAS3C;IACC,MAAM,EAAE,SAAS,EAAE,GAAG,wDAAa,cAAc,GAAC,CAAC;IAEnD,wCAAwC;IACxC,wDAAwD;IAExD,MAAM,UAAU,GAAG,SAAS,CAAC;QAC3B,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC5B,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;QAClC,UAAU,EAAE;YACV,2CAA2C;YAC3C,mDAAmD;YACnD,YAAY,EAAE,KAAK;SACpB;QACD,oBAAoB;QACpB,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;QACtC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM;KAC7B,CAAC,CAAC;IACH,MAAM,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAEhD,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,6CAA6C,CACzE,UAAU,CAAC,OAAQ,CACpB,CAAC;IAEF,IAAI,YAAY,GAAG,gCAAgC,IAAI,CAAC,SAAS,CAC/D,MAAM,CACP,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;IAEnC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACrB,MAAM,UAAU,GAAG,IAAA,wBAAkB,EAAC;YACpC,GAAG,KAAK;YACR,GAAG,EAAE,YAAY;SAClB,CAAC,CAAC;QAEH,YAAY,IAAI,IAAI,GAAG,UAAU,CAAC;KACnC;IAED,OAAO;QACL,MAAM,EAAE,YAAY;QACpB,GAAG,EAAE,UAAU,CAAC,IAAI;QACpB,GAAG,EAAE,UAAU,CAAC,GAAG;KACpB,CAAC;AACJ,CAAC;AApDD,sDAoDC;AAED,SAAgB,6CAA6C,CAC3D,KAA8C;IAE9C,MAAM,MAAM,GAAwB,EAAE,CAAC;IACvC,MAAM,SAAS,GAA2B,EAAE,CAAC;IAC7C,uFAAuF;IACvF,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACzC,qBAAqB;QACrB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;QAE3B,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;YACzB,SAAS,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxE;QAED,2CAA2C;QAC3C,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACxB,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;SAC5B;QAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,CAAC;QAC7D,OAAO;YACL,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE;SACtD,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;AAC/B,CAAC;AA1BD,sGA0BC;AAED,SAAgB,cAAc,CAAC,QAAgB;IAC7C,OAAO,CAAC,CAAC,uDAAuD,CAAC,IAAI,CACnE,QAAQ,CACT,CAAC;AACJ,CAAC;AAJD,wCAIC","sourcesContent":["import { wrapDevelopmentCSS } from \"./css\";\n\nconst RNW_CSS_CLASS_ID = \"_\";\n\nexport async function transformCssModuleWeb(props: {\n  filename: string;\n  src: string;\n  options: {\n    projectRoot: string;\n    minify: boolean;\n    dev: boolean;\n    sourceMap: boolean;\n  };\n}) {\n  const { transform } = await import(\"lightningcss\");\n\n  // TODO: Add bundling to resolve imports\n  // https://lightningcss.dev/bundling.html#bundling-order\n\n  const cssResults = transform({\n    filename: props.filename,\n    code: Buffer.from(props.src),\n    sourceMap: props.options.sourceMap,\n    cssModules: {\n      // Prevent renaming CSS variables to ensure\n      // variables created in global files are available.\n      dashedIdents: false,\n    },\n    // cssModules: true,\n    projectRoot: props.options.projectRoot,\n    minify: props.options.minify,\n  });\n  const codeAsString = cssResults.code.toString();\n\n  const { styles, variables } = convertLightningCssToReactNativeWebStyleSheet(\n    cssResults.exports!\n  );\n\n  let outputModule = `module.exports=Object.assign(${JSON.stringify(\n    styles\n  )},${JSON.stringify(variables)});`;\n\n  if (props.options.dev) {\n    const runtimeCss = wrapDevelopmentCSS({\n      ...props,\n      src: codeAsString,\n    });\n\n    outputModule += \"\\n\" + runtimeCss;\n  }\n\n  return {\n    output: outputModule,\n    css: cssResults.code,\n    map: cssResults.map,\n  };\n}\n\nexport function convertLightningCssToReactNativeWebStyleSheet(\n  input: import(\"lightningcss\").CSSModuleExports\n) {\n  const styles: Record<string, any> = {};\n  const variables: Record<string, string> = {};\n  // e.g. { container: { name: 'ahs8IW_container', composes: [], isReferenced: false }, }\n  Object.entries(input).map(([key, value]) => {\n    // order matters here\n    let className = value.name;\n\n    if (value.composes.length) {\n      className += \" \" + value.composes.map((value) => value.name).join(\" \");\n    }\n\n    // CSS Variables will be `{string: string}`\n    if (key.startsWith(\"--\")) {\n      variables[key] = className;\n    }\n\n    styles[key] = { $$css: true, [RNW_CSS_CLASS_ID]: className };\n    return {\n      [key]: { $$css: true, [RNW_CSS_CLASS_ID]: className },\n    };\n  });\n\n  return { styles, variables };\n}\n\nexport function matchCssModule(filePath: string): boolean {\n  return !!/\\.module(\\.(native|ios|android|web))?\\.(css|s[ac]ss)$/.test(\n    filePath\n  );\n}\n"]}