{"version":3,"file":"nativeCssTransform.js","sourceRoot":"","sources":["../../src/transformer/nativeCssTransform.ts"],"names":[],"mappings":";;;;;;AAAA,oFAIgC;AAEhC,+CAA+C;AAC/C,4CAAuD;AAEhD,KAAK,UAAU,kBAAkB,CACtC,MAEC,EACD,WAAmB,EACnB,QAAgB,EAChB,IAAY,EACZ,OAA2B;IAE3B,MAAM,YAAY,GAAG,IAAA,mCAAuB,EAAC,IAAI,CAAC,CAAC;IAEnD,IAAI,IAAA,4BAAc,EAAC,QAAQ,CAAC,EAAE;QAC5B,OAAO,gCAAM,CAAC,SAAS,CACrB,MAAM,EACN,WAAW,EACX,QAAQ,EACR,MAAM,CAAC,IAAI,CACT,+DAA+D,IAAI,CAAC,SAAS,CAC3E,YAAY,CACb,IAAI,CACN,EACD,OAAO,CACR,CAAC;KACH;SAAM;QACL,OAAO,gCAAM,CAAC,SAAS,CACrB,MAAM,EACN,WAAW,EACX,QAAQ,EACR,MAAM,CAAC,IAAI,CACT,gDAAgD,IAAI,CAAC,SAAS,CAC5D,YAAY,CACb,IAAI,CACN,EACD,OAAO,CACR,CAAC;KACH;AACH,CAAC;AApCD,gDAoCC","sourcesContent":["import worker, {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from \"metro-transform-worker\";\n\nimport { matchCssModule } from \"./css-modules\";\nimport { cssToReactNativeRuntime } from \"../css-to-rn\";\n\nexport async function nativeCssTransform(\n  config: JsTransformerConfig & {\n    externallyManagedCss?: Record<string, string>;\n  },\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const nativeStyles = cssToReactNativeRuntime(data);\n\n  if (matchCssModule(filename)) {\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(\n        `module.exports = require(\"@expo/styling\").StyleSheet.create(${JSON.stringify(\n          nativeStyles\n        )});`\n      ),\n      options\n    );\n  } else {\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(\n        `require(\"@expo/styling\").StyleSheet.register(${JSON.stringify(\n          nativeStyles\n        )});`\n      ),\n      options\n    );\n  }\n}\n"]}